<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Computer Networks - CS Past Papers Hub</title>
    <link rel="stylesheet" href="../css/style.css">
    <link rel="stylesheet" href="../css/components.css">
    <link rel="stylesheet" href="../css/responsive.css">
    <link rel="stylesheet" href="../css/subject.css">
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="logo">
            <div class="logo-icon">CS</div>
            <span>CS Past Papers Hub</span>
        </div>
        <div class="nav-links">
            <a href="../index.html" title="Home">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
                </svg>
            </a>
            <a href="https://github.com/yourusername" target="_blank" title="GitHub">GitHub</a>
            <a href="https://linkedin.com/in/yourusername" target="_blank" title="LinkedIn">LinkedIn</a>
            <span class="nav-name">Your Name</span>
        </div>
    </nav>

    <div class="container">
        <!-- Subject Header -->
        <div class="subject-header">
            <div class="breadcrumb">
                <a href="../index.html">Home</a> 
                <span class="separator">></span> 
                <span class="current">Computer Networks</span>
            </div>
            <h1>Computer Networks</h1>
            <p>Understanding data transmission, networking protocols, and internet communication</p>
            <div class="subject-stats">
                <div class="stat">
                    <span class="stat-number" id="totalPapers">0</span>
                    <span class="stat-label">Papers</span>
                </div>
                <div class="stat">
                    <span class="stat-number" id="latestYear">—</span>
                    <span class="stat-label">Latest</span>
                </div>
            </div>
        </div>

        <!-- Exam Categories -->
        <div class="exam-categories">
            <div class="category-tabs">
                <button class="tab-btn active" data-category="mid1">Mid 1</button>
                <button class="tab-btn" data-category="mid2">Mid 2</button>
                <button class="tab-btn" data-category="final">Final</button>
                <button class="tab-btn" data-category="quiz">Quiz</button>
            </div>
        </div>

        <!-- Papers Grid - Loaded dynamically -->
        <div class="papers-section">
            <div class="papers-grid" id="papersGrid">
                <!-- Papers will be loaded dynamically by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Load JavaScript -->
    <script src="../js/subject-data.js"></script>
    <script>
        // FIXED: Subject ID now matches the one in subject-data.js
        const currentSubjectId = 'computer-networks';

        document.addEventListener('DOMContentLoaded', function() {
            let currentCategory = 'mid1';
            initializePage();

            function initializePage() {
                updateSubjectStats();
                setupTabListeners();
                loadPapers(currentCategory);
            }

            function updateSubjectStats() {
                const currentSubject = subjectPapers[currentSubjectId];
                if (currentSubject) {
                    // Count total papers
                    const totalPapers = Object.values(currentSubject.papers)
                        .reduce((sum, category) => sum + category.length, 0);
                    
                    // Find latest year
                    let latestYear = 0;
                    Object.values(currentSubject.papers).forEach(category => {
                        category.forEach(paper => {
                            const year = parseInt(paper.year);
                            if (year > latestYear) latestYear = year;
                        });
                    });

                    document.getElementById('totalPapers').textContent = totalPapers;
                    document.getElementById('latestYear').textContent = latestYear || '—';
                }
            }

            function setupTabListeners() {
                const tabButtons = document.querySelectorAll('.tab-btn');
                tabButtons.forEach(btn => {
                    btn.addEventListener('click', function() {
                        const category = this.getAttribute('data-category');
                        switchCategory(category);
                    });
                });
            }

            function switchCategory(category) {
                currentCategory = category;
                document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
                document.querySelector(`[data-category="${category}"]`).classList.add('active');
                loadPapers(category);
            }

            function loadPapers(category) {
                const papersGrid = document.getElementById('papersGrid');
                const currentSubject = subjectPapers[currentSubjectId];
                
                if (!currentSubject) {
                    papersGrid.innerHTML = ` 
                        <div class="empty-state">
                            <h3>Subject not found</h3>
                            <p>The subject data could not be loaded. Please check the configuration.</p>
                        </div>
                    `;
                    return;
                }

                const papers = currentSubject.papers[category] || [];

                if (papers.length === 0) {
                    papersGrid.innerHTML = ` 
                        <div class="empty-state">
                            <h3>No papers available</h3>
                            <p>Papers for this category will be added soon.</p>
                        </div>
                    `;
                    return;
                }

                papersGrid.innerHTML = papers.map(paper => createPaperCard(paper)).join('');
                setupPaperCardListeners();
            }

            function createPaperCard(paper) {
                return `
                    <div class="paper-card" data-paper-id="${paper.id}">
                        <div class="paper-header">
                            <div class="paper-info">
                                <h3>${paper.title}</h3>
                                <div class="paper-year">${paper.semester} ${paper.year}</div>
                            </div>
                            <div class="paper-icon">CN</div>
                            <div class="expand-indicator">▼</div>
                        </div>
                        <div class="paper-download">
                            <div class="download-info">
                                <p><strong>File Information:</strong></p>
                                <p>Size: <span class="file-size">${paper.fileSize}</span></p>
                                <p>Format: PDF</p>
                            </div>
                            <button class="download-btn" onclick="downloadPaper('${paper.downloadUrl}', '${paper.title}')">
                                <span class="download-icon">⬇</span>
                                Download Paper
                            </button>
                        </div>
                    </div>
                `;
            }

            function setupPaperCardListeners() {
                const paperCards = document.querySelectorAll('.paper-card');
                paperCards.forEach(card => {
                    const header = card.querySelector('.paper-header');
                    header.addEventListener('click', function() {
                        togglePaperCard(card);
                    });
                });
            }

            function togglePaperCard(card) {
                const isExpanded = card.classList.contains('expanded');
                document.querySelectorAll('.paper-card.expanded').forEach(other => other.classList.remove('expanded'));
                if (!isExpanded) card.classList.add('expanded');
            }
        });

        // Global download function
        function downloadPaper(downloadUrl, paperTitle) {
            const clickedBtn = event.target.closest('.download-btn');
            if (clickedBtn) {
                const originalText = clickedBtn.innerHTML;
                clickedBtn.innerHTML = '<span class="download-icon">⏳</span> Downloading...';
                clickedBtn.disabled = true;

                if (downloadUrl === '#') {
                    alert('Download link not available yet. Please check back later.');
                    clickedBtn.innerHTML = originalText;
                    clickedBtn.disabled = false;
                    return;
                }

                const link = document.createElement('a');
                link.href = downloadUrl;
                link.download = `${paperTitle}.pdf`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                setTimeout(() => {
                    clickedBtn.innerHTML = originalText;
                    clickedBtn.disabled = false;
                }, 2000);
            }
        }
    </script>
</body>
</html>
